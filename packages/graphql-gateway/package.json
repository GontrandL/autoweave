{
  "name": "@autoweave/graphql-gateway",
  "version": "1.0.0",
  "description": "WunderGraph Cosmo GraphQL Federation Gateway with Authentication and RBAC",
  "main": "./dist/index.js",
  "scripts": {
    "build": "tsup",
    "dev": "tsx watch src/gateway.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "lint": "eslint src",
    "type-check": "tsc --noEmit",
    "start": "node dist/gateway.js",
    "cosmo:init": "npx wgc namespace create --name autoweave",
    "cosmo:publish": "npm run cosmo:publish:agents && npm run cosmo:publish:memory && npm run cosmo:publish:queue && npm run cosmo:publish:plugins && npm run cosmo:publish:observability",
    "cosmo:publish:agents": "npx wgc subgraph publish agents --schema ./subgraphs/agents/schema.graphql --routing-url http://localhost:4001/graphql",
    "cosmo:publish:memory": "npx wgc subgraph publish memory --schema ./subgraphs/memory/schema.graphql --routing-url http://localhost:4002/graphql",
    "cosmo:publish:queue": "npx wgc subgraph publish queue --schema ./subgraphs/queue/schema.graphql --routing-url http://localhost:4003/graphql",
    "cosmo:publish:plugins": "npx wgc subgraph publish plugins --schema ./subgraphs/plugins/schema.graphql --routing-url http://localhost:4004/graphql",
    "cosmo:publish:observability": "npx wgc subgraph publish observability --schema ./subgraphs/observability/schema.graphql --routing-url http://localhost:4005/graphql",
    "cosmo:compose": "npx wgc federated-graph create autoweave-gateway --routing-url http://localhost:4000/graphql",
    "dev:subgraphs": "concurrently \"npm run dev:agents\" \"npm run dev:memory\" \"npm run dev:queue\" \"npm run dev:plugins\" \"npm run dev:observability\"",
    "dev:agents": "tsx watch subgraphs/agents/server.ts",
    "dev:memory": "tsx watch subgraphs/memory/server.ts",
    "dev:queue": "tsx watch subgraphs/queue/server.ts",
    "dev:plugins": "tsx watch subgraphs/plugins/server.ts",
    "dev:observability": "tsx watch subgraphs/observability/server.ts"
  },
  "dependencies": {
    "@autoweave/core": "file:../core",
    "@autoweave/shared": "file:../shared",
    "@autoweave/memory": "file:../memory",
    "@autoweave/agents": "file:../agents",
    "@autoweave/queue": "file:../queue",
    "@autoweave/observability": "file:../observability",
    "@wundergraph/cosmo-router": "^0.78.0",
    "@wundergraph/cosmo-compose": "^0.78.0",
    "@apollo/server": "^4.10.4",
    "@apollo/subgraph": "^2.7.8",
    "apollo-server-express": "^3.12.1",
    "graphql": "^16.8.1",
    "graphql-depth-limit": "^1.1.0",
    "graphql-query-complexity": "^0.12.0",
    "graphql-rate-limit": "^2.0.0",
    "graphql-directive-auth": "^0.3.0",
    "graphql-scalars": "^1.23.0",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "ioredis": "^5.3.2",
    "express": "^4.18.2",
    "express-rate-limit": "^7.2.0",
    "helmet": "^7.1.0",
    "cors": "^2.8.5",
    "express-validator": "^7.0.1",
    "lodash": "^4.17.21",
    "node-cron": "^3.0.3"
  },
  "devDependencies": {
    "@types/express": "^5.0.3",
    "@types/node": "^20.19.7",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.17",
    "@types/lodash": "^4.17.0",
    "@types/node-cron": "^3.0.11",
    "@wundergraph/wgc": "^0.159.0",
    "tsx": "^4.7.1",
    "concurrently": "^8.2.2",
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "typescript": "^5.6.3",
    "tsup": "^8.5.0"
  },
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.js"
    }
  },
  "module": "./dist/index.mjs",
  "types": "./dist/index.d.ts",
  "files": [
    "dist",
    "src",
    "subgraphs"
  ]
}