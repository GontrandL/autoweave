name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sundays

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript', 'python' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-extended,security-and-quality
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: TruffleHog Secret Scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified

  docker-scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker images
      run: |
        docker build -t autoweave/core:scan -f packages/core/Dockerfile packages/core || true
        docker build -t autoweave/memory:scan -f packages/memory/Dockerfile packages/memory || true
        docker build -t autoweave/backend:scan -f packages/backend/Dockerfile packages/backend || true
    
    - name: Run Trivy on Docker images
      run: |
        for image in autoweave/core:scan autoweave/memory:scan autoweave/backend:scan; do
          if docker image inspect $image >/dev/null 2>&1; then
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
              aquasec/trivy:latest image --severity HIGH,CRITICAL $image
          fi
        done

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
    
    - name: Generate SBOM
      run: |
        syft . -o spdx-json > sbom.spdx.json
        syft . -o cyclonedx-json > sbom.cyclonedx.json
    
    - name: Upload SBOM artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sbom
        path: |
          sbom.spdx.json
          sbom.cyclonedx.json

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: License Finder
      uses: pivotal/LicenseFinder-action@v2
      with:
        permitted_licenses: MIT,Apache-2.0,BSD-3-Clause,BSD-2-Clause,ISC,CC0-1.0